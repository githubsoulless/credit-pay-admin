package net.chrone.creditpay.mapper;

import java.util.List;
import net.chrone.creditpay.model.Information;
import net.chrone.creditpay.model.InformationExample;
import org.apache.ibatis.annotations.Param;

public interface InformationMapper extends ParentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    long countByExample(InformationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int deleteByExample(InformationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int deleteByPrimaryKey(String infoId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int insert(Information record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int insertSelective(Information record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    List<Information> selectByExampleWithBLOBs(InformationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    List<Information> selectByExample(InformationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    Information selectByPrimaryKey(String infoId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int updateByExampleSelective(@Param("record") Information record, @Param("example") InformationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int updateByExampleWithBLOBs(@Param("record") Information record, @Param("example") InformationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int updateByExample(@Param("record") Information record, @Param("example") InformationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int updateByPrimaryKeySelective(Information record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int updateByPrimaryKeyWithBLOBs(Information record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_information
     *
     * @mbg.generated Wed Jul 10 11:49:47 CST 2019
     */
    int updateByPrimaryKey(Information record);

	int getInformationByPageCount(Information information);

	List<Information> listInformationPage(Information information);
}