package net.chrone.creditpay.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DayTransExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public DayTransExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTransDtIsNull() {
            addCriterion("trans_dt is null");
            return (Criteria) this;
        }

        public Criteria andTransDtIsNotNull() {
            addCriterion("trans_dt is not null");
            return (Criteria) this;
        }

        public Criteria andTransDtEqualTo(String value) {
            addCriterion("trans_dt =", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtNotEqualTo(String value) {
            addCriterion("trans_dt <>", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtGreaterThan(String value) {
            addCriterion("trans_dt >", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtGreaterThanOrEqualTo(String value) {
            addCriterion("trans_dt >=", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtLessThan(String value) {
            addCriterion("trans_dt <", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtLessThanOrEqualTo(String value) {
            addCriterion("trans_dt <=", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtLike(String value) {
            addCriterion("trans_dt like", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtNotLike(String value) {
            addCriterion("trans_dt not like", value, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtIn(List<String> values) {
            addCriterion("trans_dt in", values, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtNotIn(List<String> values) {
            addCriterion("trans_dt not in", values, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtBetween(String value1, String value2) {
            addCriterion("trans_dt between", value1, value2, "transDt");
            return (Criteria) this;
        }

        public Criteria andTransDtNotBetween(String value1, String value2) {
            addCriterion("trans_dt not between", value1, value2, "transDt");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("user_id like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("user_id not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andPlanAmtIsNull() {
            addCriterion("plan_amt is null");
            return (Criteria) this;
        }

        public Criteria andPlanAmtIsNotNull() {
            addCriterion("plan_amt is not null");
            return (Criteria) this;
        }

        public Criteria andPlanAmtEqualTo(Integer value) {
            addCriterion("plan_amt =", value, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtNotEqualTo(Integer value) {
            addCriterion("plan_amt <>", value, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtGreaterThan(Integer value) {
            addCriterion("plan_amt >", value, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtGreaterThanOrEqualTo(Integer value) {
            addCriterion("plan_amt >=", value, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtLessThan(Integer value) {
            addCriterion("plan_amt <", value, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtLessThanOrEqualTo(Integer value) {
            addCriterion("plan_amt <=", value, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtIn(List<Integer> values) {
            addCriterion("plan_amt in", values, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtNotIn(List<Integer> values) {
            addCriterion("plan_amt not in", values, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtBetween(Integer value1, Integer value2) {
            addCriterion("plan_amt between", value1, value2, "planAmt");
            return (Criteria) this;
        }

        public Criteria andPlanAmtNotBetween(Integer value1, Integer value2) {
            addCriterion("plan_amt not between", value1, value2, "planAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtIsNull() {
            addCriterion("fast_amt is null");
            return (Criteria) this;
        }

        public Criteria andFastAmtIsNotNull() {
            addCriterion("fast_amt is not null");
            return (Criteria) this;
        }

        public Criteria andFastAmtEqualTo(Integer value) {
            addCriterion("fast_amt =", value, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtNotEqualTo(Integer value) {
            addCriterion("fast_amt <>", value, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtGreaterThan(Integer value) {
            addCriterion("fast_amt >", value, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtGreaterThanOrEqualTo(Integer value) {
            addCriterion("fast_amt >=", value, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtLessThan(Integer value) {
            addCriterion("fast_amt <", value, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtLessThanOrEqualTo(Integer value) {
            addCriterion("fast_amt <=", value, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtIn(List<Integer> values) {
            addCriterion("fast_amt in", values, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtNotIn(List<Integer> values) {
            addCriterion("fast_amt not in", values, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtBetween(Integer value1, Integer value2) {
            addCriterion("fast_amt between", value1, value2, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andFastAmtNotBetween(Integer value1, Integer value2) {
            addCriterion("fast_amt not between", value1, value2, "fastAmt");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_day_trans
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 11 14:32:15 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_day_trans
     *
     * @mbg.generated Tue Jun 11 14:32:15 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}