package net.chrone.creditpay.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ShareImgExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public ShareImgExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andImgNameIsNull() {
            addCriterion("img_name is null");
            return (Criteria) this;
        }

        public Criteria andImgNameIsNotNull() {
            addCriterion("img_name is not null");
            return (Criteria) this;
        }

        public Criteria andImgNameEqualTo(String value) {
            addCriterion("img_name =", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotEqualTo(String value) {
            addCriterion("img_name <>", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameGreaterThan(String value) {
            addCriterion("img_name >", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameGreaterThanOrEqualTo(String value) {
            addCriterion("img_name >=", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameLessThan(String value) {
            addCriterion("img_name <", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameLessThanOrEqualTo(String value) {
            addCriterion("img_name <=", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameLike(String value) {
            addCriterion("img_name like", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotLike(String value) {
            addCriterion("img_name not like", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameIn(List<String> values) {
            addCriterion("img_name in", values, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotIn(List<String> values) {
            addCriterion("img_name not in", values, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameBetween(String value1, String value2) {
            addCriterion("img_name between", value1, value2, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotBetween(String value1, String value2) {
            addCriterion("img_name not between", value1, value2, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgPathIsNull() {
            addCriterion("img_path is null");
            return (Criteria) this;
        }

        public Criteria andImgPathIsNotNull() {
            addCriterion("img_path is not null");
            return (Criteria) this;
        }

        public Criteria andImgPathEqualTo(String value) {
            addCriterion("img_path =", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotEqualTo(String value) {
            addCriterion("img_path <>", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathGreaterThan(String value) {
            addCriterion("img_path >", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathGreaterThanOrEqualTo(String value) {
            addCriterion("img_path >=", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathLessThan(String value) {
            addCriterion("img_path <", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathLessThanOrEqualTo(String value) {
            addCriterion("img_path <=", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathLike(String value) {
            addCriterion("img_path like", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotLike(String value) {
            addCriterion("img_path not like", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathIn(List<String> values) {
            addCriterion("img_path in", values, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotIn(List<String> values) {
            addCriterion("img_path not in", values, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathBetween(String value1, String value2) {
            addCriterion("img_path between", value1, value2, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotBetween(String value1, String value2) {
            addCriterion("img_path not between", value1, value2, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgSortIsNull() {
            addCriterion("img_sort is null");
            return (Criteria) this;
        }

        public Criteria andImgSortIsNotNull() {
            addCriterion("img_sort is not null");
            return (Criteria) this;
        }

        public Criteria andImgSortEqualTo(Integer value) {
            addCriterion("img_sort =", value, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortNotEqualTo(Integer value) {
            addCriterion("img_sort <>", value, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortGreaterThan(Integer value) {
            addCriterion("img_sort >", value, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("img_sort >=", value, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortLessThan(Integer value) {
            addCriterion("img_sort <", value, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortLessThanOrEqualTo(Integer value) {
            addCriterion("img_sort <=", value, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortIn(List<Integer> values) {
            addCriterion("img_sort in", values, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortNotIn(List<Integer> values) {
            addCriterion("img_sort not in", values, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortBetween(Integer value1, Integer value2) {
            addCriterion("img_sort between", value1, value2, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgSortNotBetween(Integer value1, Integer value2) {
            addCriterion("img_sort not between", value1, value2, "imgSort");
            return (Criteria) this;
        }

        public Criteria andImgUseIsNull() {
            addCriterion("img_use is null");
            return (Criteria) this;
        }

        public Criteria andImgUseIsNotNull() {
            addCriterion("img_use is not null");
            return (Criteria) this;
        }

        public Criteria andImgUseEqualTo(Boolean value) {
            addCriterion("img_use =", value, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseNotEqualTo(Boolean value) {
            addCriterion("img_use <>", value, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseGreaterThan(Boolean value) {
            addCriterion("img_use >", value, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseGreaterThanOrEqualTo(Boolean value) {
            addCriterion("img_use >=", value, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseLessThan(Boolean value) {
            addCriterion("img_use <", value, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseLessThanOrEqualTo(Boolean value) {
            addCriterion("img_use <=", value, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseIn(List<Boolean> values) {
            addCriterion("img_use in", values, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseNotIn(List<Boolean> values) {
            addCriterion("img_use not in", values, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseBetween(Boolean value1, Boolean value2) {
            addCriterion("img_use between", value1, value2, "imgUse");
            return (Criteria) this;
        }

        public Criteria andImgUseNotBetween(Boolean value1, Boolean value2) {
            addCriterion("img_use not between", value1, value2, "imgUse");
            return (Criteria) this;
        }

        public Criteria andFileSizeIsNull() {
            addCriterion("file_size is null");
            return (Criteria) this;
        }

        public Criteria andFileSizeIsNotNull() {
            addCriterion("file_size is not null");
            return (Criteria) this;
        }

        public Criteria andFileSizeEqualTo(Integer value) {
            addCriterion("file_size =", value, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeNotEqualTo(Integer value) {
            addCriterion("file_size <>", value, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeGreaterThan(Integer value) {
            addCriterion("file_size >", value, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("file_size >=", value, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeLessThan(Integer value) {
            addCriterion("file_size <", value, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeLessThanOrEqualTo(Integer value) {
            addCriterion("file_size <=", value, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeIn(List<Integer> values) {
            addCriterion("file_size in", values, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeNotIn(List<Integer> values) {
            addCriterion("file_size not in", values, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeBetween(Integer value1, Integer value2) {
            addCriterion("file_size between", value1, value2, "fileSize");
            return (Criteria) this;
        }

        public Criteria andFileSizeNotBetween(Integer value1, Integer value2) {
            addCriterion("file_size not between", value1, value2, "fileSize");
            return (Criteria) this;
        }

        public Criteria andOperAdminIsNull() {
            addCriterion("oper_admin is null");
            return (Criteria) this;
        }

        public Criteria andOperAdminIsNotNull() {
            addCriterion("oper_admin is not null");
            return (Criteria) this;
        }

        public Criteria andOperAdminEqualTo(String value) {
            addCriterion("oper_admin =", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminNotEqualTo(String value) {
            addCriterion("oper_admin <>", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminGreaterThan(String value) {
            addCriterion("oper_admin >", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminGreaterThanOrEqualTo(String value) {
            addCriterion("oper_admin >=", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminLessThan(String value) {
            addCriterion("oper_admin <", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminLessThanOrEqualTo(String value) {
            addCriterion("oper_admin <=", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminLike(String value) {
            addCriterion("oper_admin like", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminNotLike(String value) {
            addCriterion("oper_admin not like", value, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminIn(List<String> values) {
            addCriterion("oper_admin in", values, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminNotIn(List<String> values) {
            addCriterion("oper_admin not in", values, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminBetween(String value1, String value2) {
            addCriterion("oper_admin between", value1, value2, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andOperAdminNotBetween(String value1, String value2) {
            addCriterion("oper_admin not between", value1, value2, "operAdmin");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_share_img
     *
     * @mbg.generated do_not_delete_during_merge Wed Sep 19 15:13:02 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_share_img
     *
     * @mbg.generated Wed Sep 19 15:13:02 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}