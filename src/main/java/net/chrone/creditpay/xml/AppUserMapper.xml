<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.chrone.creditpay.mapper.AppUserMapper">
  <resultMap id="BaseResultMap" type="net.chrone.creditpay.model.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="mer_name" jdbcType="VARCHAR" property="merName" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="parent_user_id" jdbcType="VARCHAR" property="parentUserId" />
    <result column="agent_id" jdbcType="VARCHAR" property="agentId" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="cert_no" jdbcType="VARCHAR" property="certNo" />
    <result column="pms_bank_no" jdbcType="VARCHAR" property="pmsBankNo" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="ty_count" jdbcType="INTEGER" property="tyCount" />
    <result column="close_plan_count" jdbcType="INTEGER" property="closePlanCount" />
    <result column="last_login_ts" jdbcType="TIMESTAMP" property="lastLoginTs" />
    <result column="cert_correct" jdbcType="VARCHAR" property="certCorrect" />
    <result column="cert_opposite" jdbcType="VARCHAR" property="certOpposite" />
    <result column="cert_meet" jdbcType="VARCHAR" property="certMeet" />
    <result column="card_correct" jdbcType="VARCHAR" property="cardCorrect" />
    <result column="card_opposite" jdbcType="VARCHAR" property="cardOpposite" />
    <result column="cert_status" jdbcType="INTEGER" property="certStatus" />
    <result column="login_pwd" jdbcType="VARCHAR" property="loginPwd" />
    <result column="pay_pwd" jdbcType="VARCHAR" property="payPwd" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="row_crt_usr" jdbcType="VARCHAR" property="rowCrtUsr" />
    <result column="row_crt_ts" jdbcType="TIMESTAMP" property="rowCrtTs" />
    <result column="rec_upd_usr" jdbcType="VARCHAR" property="recUpdUsr" />
    <result column="rec_upd_ts" jdbcType="TIMESTAMP" property="recUpdTs" />
    <result column="sum_order" jdbcType="INTEGER" property="sumOrder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    user_id, login_id, mer_name, level_id, status, parent_user_id, agent_id, account_name, 
    card_no, cert_no, pms_bank_no, mobile, ty_count, close_plan_count, last_login_ts, 
    cert_correct, cert_opposite, cert_meet, card_correct, card_opposite, cert_status, 
    login_pwd, pay_pwd, owner_id, row_crt_usr, row_crt_ts, rec_upd_usr, rec_upd_ts
  </sql>
  <select id="selectByExample" parameterType="net.chrone.creditpay.model.AppUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_app_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    delete from t_app_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.chrone.creditpay.model.AppUserExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    delete from t_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.chrone.creditpay.model.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    insert into t_app_user (user_id, login_id, mer_name, 
      level_id, status, parent_user_id, 
      agent_id, account_name, card_no, 
      cert_no, pms_bank_no, mobile, 
      ty_count, close_plan_count, last_login_ts, 
      cert_correct, cert_opposite, cert_meet, 
      card_correct, card_opposite, cert_status, 
      login_pwd, pay_pwd, owner_id, 
      row_crt_usr, row_crt_ts, rec_upd_usr, 
      rec_upd_ts)
    values (#{userId,jdbcType=VARCHAR}, #{loginId,jdbcType=VARCHAR}, #{merName,jdbcType=VARCHAR}, 
      #{levelId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{parentUserId,jdbcType=VARCHAR}, 
      #{agentId,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, 
      #{certNo,jdbcType=VARCHAR}, #{pmsBankNo,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{tyCount,jdbcType=INTEGER}, #{closePlanCount,jdbcType=INTEGER}, #{lastLoginTs,jdbcType=TIMESTAMP}, 
      #{certCorrect,jdbcType=VARCHAR}, #{certOpposite,jdbcType=VARCHAR}, #{certMeet,jdbcType=VARCHAR}, 
      #{cardCorrect,jdbcType=VARCHAR}, #{cardOpposite,jdbcType=VARCHAR}, #{certStatus,jdbcType=INTEGER}, 
      #{loginPwd,jdbcType=VARCHAR}, #{payPwd,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, 
      #{rowCrtUsr,jdbcType=VARCHAR}, #{rowCrtTs,jdbcType=TIMESTAMP}, #{recUpdUsr,jdbcType=VARCHAR}, 
      #{recUpdTs,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="net.chrone.creditpay.model.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    insert into t_app_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="merName != null">
        mer_name,
      </if>
      <if test="levelId != null">
        level_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="parentUserId != null">
        parent_user_id,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="certNo != null">
        cert_no,
      </if>
      <if test="pmsBankNo != null">
        pms_bank_no,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="tyCount != null">
        ty_count,
      </if>
      <if test="closePlanCount != null">
        close_plan_count,
      </if>
      <if test="lastLoginTs != null">
        last_login_ts,
      </if>
      <if test="certCorrect != null">
        cert_correct,
      </if>
      <if test="certOpposite != null">
        cert_opposite,
      </if>
      <if test="certMeet != null">
        cert_meet,
      </if>
      <if test="cardCorrect != null">
        card_correct,
      </if>
      <if test="cardOpposite != null">
        card_opposite,
      </if>
      <if test="certStatus != null">
        cert_status,
      </if>
      <if test="loginPwd != null">
        login_pwd,
      </if>
      <if test="payPwd != null">
        pay_pwd,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="rowCrtUsr != null">
        row_crt_usr,
      </if>
      <if test="rowCrtTs != null">
        row_crt_ts,
      </if>
      <if test="recUpdUsr != null">
        rec_upd_usr,
      </if>
      <if test="recUpdTs != null">
        rec_upd_ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="merName != null">
        #{merName,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="parentUserId != null">
        #{parentUserId,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null">
        #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="pmsBankNo != null">
        #{pmsBankNo,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="tyCount != null">
        #{tyCount,jdbcType=INTEGER},
      </if>
      <if test="closePlanCount != null">
        #{closePlanCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTs != null">
        #{lastLoginTs,jdbcType=TIMESTAMP},
      </if>
      <if test="certCorrect != null">
        #{certCorrect,jdbcType=VARCHAR},
      </if>
      <if test="certOpposite != null">
        #{certOpposite,jdbcType=VARCHAR},
      </if>
      <if test="certMeet != null">
        #{certMeet,jdbcType=VARCHAR},
      </if>
      <if test="cardCorrect != null">
        #{cardCorrect,jdbcType=VARCHAR},
      </if>
      <if test="cardOpposite != null">
        #{cardOpposite,jdbcType=VARCHAR},
      </if>
      <if test="certStatus != null">
        #{certStatus,jdbcType=INTEGER},
      </if>
      <if test="loginPwd != null">
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="payPwd != null">
        #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtUsr != null">
        #{rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtTs != null">
        #{rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdUsr != null">
        #{recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="recUpdTs != null">
        #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.chrone.creditpay.model.AppUserExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    select count(*) from t_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    update t_app_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.merName != null">
        mer_name = #{record.merName,jdbcType=VARCHAR},
      </if>
      <if test="record.levelId != null">
        level_id = #{record.levelId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.parentUserId != null">
        parent_user_id = #{record.parentUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.certNo != null">
        cert_no = #{record.certNo,jdbcType=VARCHAR},
      </if>
      <if test="record.pmsBankNo != null">
        pms_bank_no = #{record.pmsBankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.tyCount != null">
        ty_count = #{record.tyCount,jdbcType=INTEGER},
      </if>
      <if test="record.closePlanCount != null">
        close_plan_count = #{record.closePlanCount,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginTs != null">
        last_login_ts = #{record.lastLoginTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.certCorrect != null">
        cert_correct = #{record.certCorrect,jdbcType=VARCHAR},
      </if>
      <if test="record.certOpposite != null">
        cert_opposite = #{record.certOpposite,jdbcType=VARCHAR},
      </if>
      <if test="record.certMeet != null">
        cert_meet = #{record.certMeet,jdbcType=VARCHAR},
      </if>
      <if test="record.cardCorrect != null">
        card_correct = #{record.cardCorrect,jdbcType=VARCHAR},
      </if>
      <if test="record.cardOpposite != null">
        card_opposite = #{record.cardOpposite,jdbcType=VARCHAR},
      </if>
      <if test="record.certStatus != null">
        cert_status = #{record.certStatus,jdbcType=INTEGER},
      </if>
      <if test="record.loginPwd != null">
        login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.payPwd != null">
        pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.rowCrtUsr != null">
        row_crt_usr = #{record.rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="record.rowCrtTs != null">
        row_crt_ts = #{record.rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recUpdUsr != null">
        rec_upd_usr = #{record.recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="record.recUpdTs != null">
        rec_upd_ts = #{record.recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    update t_app_user
    set user_id = #{record.userId,jdbcType=VARCHAR},
      login_id = #{record.loginId,jdbcType=VARCHAR},
      mer_name = #{record.merName,jdbcType=VARCHAR},
      level_id = #{record.levelId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      parent_user_id = #{record.parentUserId,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      cert_no = #{record.certNo,jdbcType=VARCHAR},
      pms_bank_no = #{record.pmsBankNo,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      ty_count = #{record.tyCount,jdbcType=INTEGER},
      close_plan_count = #{record.closePlanCount,jdbcType=INTEGER},
      last_login_ts = #{record.lastLoginTs,jdbcType=TIMESTAMP},
      cert_correct = #{record.certCorrect,jdbcType=VARCHAR},
      cert_opposite = #{record.certOpposite,jdbcType=VARCHAR},
      cert_meet = #{record.certMeet,jdbcType=VARCHAR},
      card_correct = #{record.cardCorrect,jdbcType=VARCHAR},
      card_opposite = #{record.cardOpposite,jdbcType=VARCHAR},
      cert_status = #{record.certStatus,jdbcType=INTEGER},
      login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      row_crt_usr = #{record.rowCrtUsr,jdbcType=VARCHAR},
      row_crt_ts = #{record.rowCrtTs,jdbcType=TIMESTAMP},
      rec_upd_usr = #{record.recUpdUsr,jdbcType=VARCHAR},
      rec_upd_ts = #{record.recUpdTs,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.chrone.creditpay.model.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    update t_app_user
    <set>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="merName != null">
        mer_name = #{merName,jdbcType=VARCHAR},
      </if>
      <if test="levelId != null">
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="parentUserId != null">
        parent_user_id = #{parentUserId,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null">
        cert_no = #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="pmsBankNo != null">
        pms_bank_no = #{pmsBankNo,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="tyCount != null">
        ty_count = #{tyCount,jdbcType=INTEGER},
      </if>
      <if test="closePlanCount != null">
        close_plan_count = #{closePlanCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTs != null">
        last_login_ts = #{lastLoginTs,jdbcType=TIMESTAMP},
      </if>
      <if test="certCorrect != null">
        cert_correct = #{certCorrect,jdbcType=VARCHAR},
      </if>
      <if test="certOpposite != null">
        cert_opposite = #{certOpposite,jdbcType=VARCHAR},
      </if>
      <if test="certMeet != null">
        cert_meet = #{certMeet,jdbcType=VARCHAR},
      </if>
      <if test="cardCorrect != null">
        card_correct = #{cardCorrect,jdbcType=VARCHAR},
      </if>
      <if test="cardOpposite != null">
        card_opposite = #{cardOpposite,jdbcType=VARCHAR},
      </if>
      <if test="certStatus != null">
        cert_status = #{certStatus,jdbcType=INTEGER},
      </if>
      <if test="loginPwd != null">
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="payPwd != null">
        pay_pwd = #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtUsr != null">
        row_crt_usr = #{rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtTs != null">
        row_crt_ts = #{rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdUsr != null">
        rec_upd_usr = #{recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="recUpdTs != null">
        rec_upd_ts = #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.chrone.creditpay.model.AppUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 20 09:14:32 CST 2018.
    -->
    update t_app_user
    set login_id = #{loginId,jdbcType=VARCHAR},
      mer_name = #{merName,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      parent_user_id = #{parentUserId,jdbcType=VARCHAR},
      agent_id = #{agentId,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      cert_no = #{certNo,jdbcType=VARCHAR},
      pms_bank_no = #{pmsBankNo,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      ty_count = #{tyCount,jdbcType=INTEGER},
      close_plan_count = #{closePlanCount,jdbcType=INTEGER},
      last_login_ts = #{lastLoginTs,jdbcType=TIMESTAMP},
      cert_correct = #{certCorrect,jdbcType=VARCHAR},
      cert_opposite = #{certOpposite,jdbcType=VARCHAR},
      cert_meet = #{certMeet,jdbcType=VARCHAR},
      card_correct = #{cardCorrect,jdbcType=VARCHAR},
      card_opposite = #{cardOpposite,jdbcType=VARCHAR},
      cert_status = #{certStatus,jdbcType=INTEGER},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      pay_pwd = #{payPwd,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      row_crt_usr = #{rowCrtUsr,jdbcType=VARCHAR},
      row_crt_ts = #{rowCrtTs,jdbcType=TIMESTAMP},
      rec_upd_usr = #{recUpdUsr,jdbcType=VARCHAR},
      rec_upd_ts = #{recUpdTs,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <sql id="where_page">
  	<where>
  		<if test="userId !=null and userId !=''">
  			and t.user_id=#{userId}
	  	</if>
  		<if test="parentUserId !=null and parentUserId !=''">
  			and t.parent_user_id=#{parentUserId}
	  	</if>
  		<if test="loginId !=null and loginId !=''">
  			and t.login_id=#{loginId}
	  	</if>
  		<if test="accountName !=null and accountName !=''">
  			and t.account_name=#{accountName}
	  	</if>
  		<if test="levelId !=null">
  			and t.level_id=#{levelId}
	  	</if>
  		<if test="status !=null">
  			and t.status=#{status}
	  	</if>
  		<if test="certStatus !=null">
  			and t.cert_status=#{certStatus}
	  	</if>
	  	<if test="startTime !=null and startTime !=''">
	  		and t.row_crt_ts &gt;=#{startTime}
	  	</if>
	  	<if test="endTime !=null and endTime !=''">
	  		and t.row_crt_ts &lt;=#{endTime}
	  	</if>
	  	<if test="agentId1 !=null and agentId1 !=''">
			and t.agent_id in 
	 		<foreach close=")" collection="agentIds" index="index" item="item" open="(" separator=",">  
			  #{item}  
			 </foreach> 
	  	</if>
	  	<if test="agentId4 !=null and agentId4 !=''"> 
  			and t.agent_id=#{agentId4}
	  	</if>
	  	<if test="parentUserId != null and parentUserId!=''">
	  		and t.parent_user_id = #{parentUserId}
	  	</if>
	  	<if test="pid != null and pid != ''">
	  		and ut.user_id = #{pid}
	  	</if>
	  	<if test="ids !=null">
	  	 	and t.user_id in
	  	 <foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">  
		  #{item}  
		 </foreach>
	  	</if>
  	</where>
  </sql>
  <select id="getAppUserByPageCount" parameterType="net.chrone.creditpay.model.AppUser" resultType="int">
  	select count(1) from t_app_user t 
  	<include refid="where_page" />
  </select>
  <select id="getAppUserByPage" parameterType="net.chrone.creditpay.model.AppUser" resultMap="BaseResultMap">
 	 select a.* from (
  	select t.*,
  	(select count(1) from t_user_tree where user_id=t.user_id and type=0 ) as directCount,
  	(select count(1) from t_user_tree where user_id=t.user_id) as subUserCount,
  	(select count(1) from t_card_inf where user_id=t.user_id and status=0 ) as cardNum
  	 from t_app_user t 
  	<include refid="where_page" />
  	order by t.row_crt_ts desc
  	limit  #{startRow} , #{pageSize}
  	)a 
  </select>
  
  <select id="getAppUserByParentIdList" parameterType="map" resultType="String">
  	 select user_id from t_app_user where parent_user_id in  
	 <foreach close=")" collection="ids" index="index" item="item" open="(" separator=",">  
	  #{item}  
	 </foreach>  
  </select>
  
  <update id="updateAppUserAgentIdByParentUserId" parameterType="net.chrone.creditpay.model.AppUser">
  	update t_app_user set agent_id=#{agentId} where parent_user_id=#{parentUserId}
  </update>
  
  <select id="getUserLikeUserId" parameterType="String" resultMap="BaseResultMap">
  	select user_id,mer_name from t_app_user where user_id like concat(#{userId},'%')
  </select>
  
  <select id="levelDistribution" resultType="map">
  	select a.level_id as levelId,level_name as levelName,count(1) as levelCount from t_app_user a left join t_level_inf b on a.level_id=b.level_id group by a.level_id order by a.level_id desc
  </select>
  
  <select id="listIncreasing" resultType="map">
  	select DATE_FORMAT(a.row_crt_ts,'%Y%m%d') as days,count(1) as count,
  	(select count(1) from t_app_user b where b.row_crt_ts &lt;=str_to_date(days,'%Y%m%d %T')) as totalcount 
  	from t_app_user a where 1=1
  	<if test="startTime !=null and startTime !=''">
  		and a.row_crt_ts &gt;=#{startTime}
  	</if>
  	<if test="endTime !=null and endTime !=''">
  		and a.row_crt_ts &lt;=#{endTime}
  	</if>
  	group by days order by days desc
  </select>
  <select id="countSubAppUser" parameterType="net.chrone.creditpay.model.AppUser" resultType="int">
  	select count(1) from t_app_user t 
  	left join t_user_tree ut on t.user_id=ut.low_user_id
  	<include refid="where_page" />
  </select>
  <select id="listSubAppUser" parameterType="net.chrone.creditpay.model.AppUser" resultMap="BaseResultMap">
 	 select a.* from (
  	select t.*,
  	(select count(1) from t_user_tree where user_id=t.user_id and type=0 ) as directCount,
  	(select count(1) from t_user_tree where user_id=t.user_id) as subUserCount,
  	(select count(1) from t_card_inf where user_id=t.user_id and status=0 ) as cardNum
  	 from t_app_user t 
  	 left join t_user_tree ut on t.user_id=ut.low_user_id
  	<include refid="where_page" />
  	order by t.row_crt_ts desc
  	limit  #{startRow} , #{pageSize}
  	)a 
  </select>
  
  <sql id="userorder_where_page">
  	<where>
  	 	<if test="userId !=null and userId !=''">
  	 	au.user_id=#{userId}
  	 	</if>
  	 	<if test="certStatus !=null">
  	 	au.cert_status=#{certStatus}
  	 	</if>
  	</where>
  </sql>	
  <select id="getUserOrderStaticsPageCount" parameterType="net.chrone.creditpay.model.AppUser" resultType="int">
	   select count(1) from t_app_user au 
	   <include refid="userorder_where_page" />
  </select>
  
  <select id="getUserOrderStaticsByPage" parameterType="net.chrone.creditpay.model.AppUser" resultMap="BaseResultMap">
  	 select au.user_id,au.account_name,au.row_crt_ts,au.cert_status,
	(select (case when sum(amount) is null then 0 else sum(amount) end ) from t_order where user_id=au.user_id and order_dt&gt;=#{startDate} and order_dt&lt;=#{endDate} and order_tp=0)
	+ 
	(select (case when sum(amount) is null then 0 else sum(amount) end ) from t_fast_order where user_id=au.user_id and order_dt&gt;=#{startDate} and order_dt&lt;=#{endDate} and order_tp=0) as sum_order
	from t_app_user au
	 <include refid="userorder_where_page" /> 
	 	order by sum_order desc
	limit  #{startRow} , #{pageSize}
  </select>
  
</mapper>