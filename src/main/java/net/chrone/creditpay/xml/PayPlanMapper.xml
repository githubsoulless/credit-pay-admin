<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.chrone.creditpay.mapper.PayPlanMapper">
  <resultMap id="BaseResultMap" type="net.chrone.creditpay.model.PayPlan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    <id column="plan_id" jdbcType="VARCHAR" property="planId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="card_name" jdbcType="VARCHAR" property="cardName" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="bank_no" jdbcType="VARCHAR" property="bankNo" />
    <result column="plan_amt" jdbcType="INTEGER" property="planAmt" />
    <result column="pay_amt" jdbcType="INTEGER" property="payAmt" />
    <result column="fee" jdbcType="INTEGER" property="fee" />
    <result column="plan_dt_num" jdbcType="INTEGER" property="planDtNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="xf_num" jdbcType="INTEGER" property="xfNum" />
    <result column="pay_num" jdbcType="INTEGER" property="payNum" />
    <result column="pay_balance" jdbcType="INTEGER" property="payBalance" />
    <result column="df_fee" jdbcType="INTEGER" property="dfFee" />
    <result column="df_fee_balance" jdbcType="INTEGER" property="dfFeeBalance" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="row_crt_usr" jdbcType="VARCHAR" property="rowCrtUsr" />
    <result column="row_crt_ts" jdbcType="TIMESTAMP" property="rowCrtTs" />
    <result column="rec_upd_usr" jdbcType="VARCHAR" property="recUpdUsr" />
    <result column="rec_upd_ts" jdbcType="TIMESTAMP" property="recUpdTs" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    plan_id, user_id, card_id, card_name, card_no, bank_no, plan_amt, pay_amt, fee, plan_dt_num, 
    status, xf_num, pay_num, pay_balance, df_fee, df_fee_balance, remark, row_crt_usr, 
    row_crt_ts, rec_upd_usr, rec_upd_ts
  </sql>
  <select id="selectByExample" parameterType="net.chrone.creditpay.model.PayPlanExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_pay_plan
    where plan_id = #{planId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    delete from t_pay_plan
    where plan_id = #{planId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.chrone.creditpay.model.PayPlanExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    delete from t_pay_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.chrone.creditpay.model.PayPlan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    insert into t_pay_plan (plan_id, user_id, card_id, 
      card_name, card_no, bank_no, 
      plan_amt, pay_amt, fee, 
      plan_dt_num, status, xf_num, 
      pay_num, pay_balance, df_fee, 
      df_fee_balance, remark, row_crt_usr, 
      row_crt_ts, rec_upd_usr, rec_upd_ts
      )
    values (#{planId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, 
      #{cardName,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, 
      #{planAmt,jdbcType=INTEGER}, #{payAmt,jdbcType=INTEGER}, #{fee,jdbcType=INTEGER}, 
      #{planDtNum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{xfNum,jdbcType=INTEGER}, 
      #{payNum,jdbcType=INTEGER}, #{payBalance,jdbcType=INTEGER}, #{dfFee,jdbcType=INTEGER}, 
      #{dfFeeBalance,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{rowCrtUsr,jdbcType=VARCHAR}, 
      #{rowCrtTs,jdbcType=TIMESTAMP}, #{recUpdUsr,jdbcType=VARCHAR}, #{recUpdTs,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.chrone.creditpay.model.PayPlan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    insert into t_pay_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="planId != null">
        plan_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="cardName != null">
        card_name,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="bankNo != null">
        bank_no,
      </if>
      <if test="planAmt != null">
        plan_amt,
      </if>
      <if test="payAmt != null">
        pay_amt,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="planDtNum != null">
        plan_dt_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="xfNum != null">
        xf_num,
      </if>
      <if test="payNum != null">
        pay_num,
      </if>
      <if test="payBalance != null">
        pay_balance,
      </if>
      <if test="dfFee != null">
        df_fee,
      </if>
      <if test="dfFeeBalance != null">
        df_fee_balance,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="rowCrtUsr != null">
        row_crt_usr,
      </if>
      <if test="rowCrtTs != null">
        row_crt_ts,
      </if>
      <if test="recUpdUsr != null">
        rec_upd_usr,
      </if>
      <if test="recUpdTs != null">
        rec_upd_ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="planId != null">
        #{planId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null">
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="planAmt != null">
        #{planAmt,jdbcType=INTEGER},
      </if>
      <if test="payAmt != null">
        #{payAmt,jdbcType=INTEGER},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=INTEGER},
      </if>
      <if test="planDtNum != null">
        #{planDtNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="xfNum != null">
        #{xfNum,jdbcType=INTEGER},
      </if>
      <if test="payNum != null">
        #{payNum,jdbcType=INTEGER},
      </if>
      <if test="payBalance != null">
        #{payBalance,jdbcType=INTEGER},
      </if>
      <if test="dfFee != null">
        #{dfFee,jdbcType=INTEGER},
      </if>
      <if test="dfFeeBalance != null">
        #{dfFeeBalance,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtUsr != null">
        #{rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtTs != null">
        #{rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdUsr != null">
        #{recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="recUpdTs != null">
        #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.chrone.creditpay.model.PayPlanExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    select count(*) from t_pay_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    update t_pay_plan
    <set>
      <if test="record.planId != null">
        plan_id = #{record.planId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardName != null">
        card_name = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNo != null">
        bank_no = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.planAmt != null">
        plan_amt = #{record.planAmt,jdbcType=INTEGER},
      </if>
      <if test="record.payAmt != null">
        pay_amt = #{record.payAmt,jdbcType=INTEGER},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=INTEGER},
      </if>
      <if test="record.planDtNum != null">
        plan_dt_num = #{record.planDtNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.xfNum != null">
        xf_num = #{record.xfNum,jdbcType=INTEGER},
      </if>
      <if test="record.payNum != null">
        pay_num = #{record.payNum,jdbcType=INTEGER},
      </if>
      <if test="record.payBalance != null">
        pay_balance = #{record.payBalance,jdbcType=INTEGER},
      </if>
      <if test="record.dfFee != null">
        df_fee = #{record.dfFee,jdbcType=INTEGER},
      </if>
      <if test="record.dfFeeBalance != null">
        df_fee_balance = #{record.dfFeeBalance,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.rowCrtUsr != null">
        row_crt_usr = #{record.rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="record.rowCrtTs != null">
        row_crt_ts = #{record.rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recUpdUsr != null">
        rec_upd_usr = #{record.recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="record.recUpdTs != null">
        rec_upd_ts = #{record.recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    update t_pay_plan
    set plan_id = #{record.planId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      card_name = #{record.cardName,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      plan_amt = #{record.planAmt,jdbcType=INTEGER},
      pay_amt = #{record.payAmt,jdbcType=INTEGER},
      fee = #{record.fee,jdbcType=INTEGER},
      plan_dt_num = #{record.planDtNum,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      xf_num = #{record.xfNum,jdbcType=INTEGER},
      pay_num = #{record.payNum,jdbcType=INTEGER},
      pay_balance = #{record.payBalance,jdbcType=INTEGER},
      df_fee = #{record.dfFee,jdbcType=INTEGER},
      df_fee_balance = #{record.dfFeeBalance,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      row_crt_usr = #{record.rowCrtUsr,jdbcType=VARCHAR},
      row_crt_ts = #{record.rowCrtTs,jdbcType=TIMESTAMP},
      rec_upd_usr = #{record.recUpdUsr,jdbcType=VARCHAR},
      rec_upd_ts = #{record.recUpdTs,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.chrone.creditpay.model.PayPlan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    update t_pay_plan
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null">
        card_name = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="planAmt != null">
        plan_amt = #{planAmt,jdbcType=INTEGER},
      </if>
      <if test="payAmt != null">
        pay_amt = #{payAmt,jdbcType=INTEGER},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=INTEGER},
      </if>
      <if test="planDtNum != null">
        plan_dt_num = #{planDtNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="xfNum != null">
        xf_num = #{xfNum,jdbcType=INTEGER},
      </if>
      <if test="payNum != null">
        pay_num = #{payNum,jdbcType=INTEGER},
      </if>
      <if test="payBalance != null">
        pay_balance = #{payBalance,jdbcType=INTEGER},
      </if>
      <if test="dfFee != null">
        df_fee = #{dfFee,jdbcType=INTEGER},
      </if>
      <if test="dfFeeBalance != null">
        df_fee_balance = #{dfFeeBalance,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtUsr != null">
        row_crt_usr = #{rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtTs != null">
        row_crt_ts = #{rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdUsr != null">
        rec_upd_usr = #{recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="recUpdTs != null">
        rec_upd_ts = #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    where plan_id = #{planId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.chrone.creditpay.model.PayPlan">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 25 14:44:25 CST 2017.
    -->
    update t_pay_plan
    set user_id = #{userId,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      card_name = #{cardName,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      plan_amt = #{planAmt,jdbcType=INTEGER},
      pay_amt = #{payAmt,jdbcType=INTEGER},
      fee = #{fee,jdbcType=INTEGER},
      plan_dt_num = #{planDtNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      xf_num = #{xfNum,jdbcType=INTEGER},
      pay_num = #{payNum,jdbcType=INTEGER},
      pay_balance = #{payBalance,jdbcType=INTEGER},
      df_fee = #{dfFee,jdbcType=INTEGER},
      df_fee_balance = #{dfFeeBalance,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      row_crt_usr = #{rowCrtUsr,jdbcType=VARCHAR},
      row_crt_ts = #{rowCrtTs,jdbcType=TIMESTAMP},
      rec_upd_usr = #{recUpdUsr,jdbcType=VARCHAR},
      rec_upd_ts = #{recUpdTs,jdbcType=TIMESTAMP}
    where plan_id = #{planId,jdbcType=VARCHAR}
  </update>
  
   <sql id="where_page">
  	<where>
  		<if test="planId !=null and planId !=''">
  			and t.plan_id=#{planId}
	  	</if>
  		<if test="cardNo !=null and cardNo !=''">
  			and t.card_no=#{cardNo}
	  	</if>
  		<if test="cardName !=null and cardName !=''">
  			and t.card_name=#{cardName}
	  	</if>
  		<if test="userId !=null and userId !=''">
  			and t.user_id=#{userId}
	  	</if>
  		<if test="cardId !=null and cardId !=''">
  			and t.card_id=#{cardId}
	  	</if>
  		<if test="status !=null">
  			and t.status=#{status}
	  	</if>
	  	<if test="startTime !=null and startTime !=''">
	  		and t.row_crt_ts &gt;=#{startTime}
	  	</if>
	  	<if test="endTime !=null and endTime !=''">
	  		and t.row_crt_ts &lt;=#{endTime}
	  	</if>
	  	<if test="remark !=null and remark !=''">
	  		and t.remark like CONCAT(CONCAT('%',#{remark}),'%')
	  	</if>
  	</where>
  </sql>
   <select id="getPayPlanByPageCount" parameterType="net.chrone.creditpay.model.PayPlan" resultType="map">
  	select count(1) as count,sum(plan_amt) as sumPlanAmt,sum(fee) as sumFee,sum(fee-pay_amt) sumPayAmt,sum(df_fee) as sumDfFee from t_pay_plan t 
  	<include refid="where_page" />
  </select>
  <select id="getPayPlanByPage" parameterType="net.chrone.creditpay.model.PayPlan" resultMap="BaseResultMap">
 	 select a.* from (
  	select t.*,
  	(select count(1) from t_pay_plan_task b where b.plan_id=t.plan_id and status=2 and type=0 ) as successXfCount,
	(select count(1) from t_pay_plan_task b where b.plan_id=t.plan_id and status=2 and type=1 ) as successPayCount
  	from t_pay_plan t 
  	<include refid="where_page" />
  	order by t.row_crt_ts desc
  	)a limit  #{startRow} , #{pageSize}
  </select>
  
  <sql id="where_statistics_crt">
  	<where>
  		<if test="startTime !=null and startTime !=''">
	  		and a.row_crt_ts &gt;=#{startTime}
	  	</if>
	  	<if test="endTime !=null and endTime !=''">
	  		and a.row_crt_ts &lt;=#{endTime}
	  	</if>
  	</where>
  </sql>
   <sql id="where_statistics_upd">
  	<where>
  		<if test="startTime !=null and startTime !=''">
	  		and a.rec_upd_ts &gt;=#{startTime}
	  	</if>
	  	<if test="endTime !=null and endTime !=''">
	  		and a.rec_upd_ts &lt;=#{endTime}
	  	</if>
  	</where>
  </sql>
  
  <select id="listPayPlayStatistics" resultType="map">
  	select DATE_FORMAT(a.row_crt_ts,'%Y-%m-%d') as days,(select count(1) from t_pay_plan b where DATE_FORMAT(b.row_crt_ts,'%Y-%m-%d') = days) as newCount,
	(select count(1) from t_pay_plan b where DATE_FORMAT(b.row_crt_ts,'%Y-%m-%d') = days and status=1) as failCount,
	(select count(1) from t_pay_plan b where DATE_FORMAT(b.row_crt_ts,'%Y-%m-%d') = days and status=2) as finishCount,
	(select count(1) from t_pay_plan b where DATE_FORMAT(b.row_crt_ts,'%Y-%m-%d') = days and status=3) as stopCount
	from t_pay_plan a 
	<include refid="where_statistics_crt" />
	group by days order by days desc
  </select>
  
  <select id="countPayPlayStatistics" resultType="map">
  	select
  	(select count(1) from t_pay_plan a <include refid="where_statistics_crt" />) as sumNewCount,
	(select count(1) from t_pay_plan a <include refid="where_statistics_upd" /> and status=1) as sumFailCount,
	(select count(1) from t_pay_plan a <include refid="where_statistics_upd" /> and status=2) as sumFinishCount,
	(select count(1) from t_pay_plan a <include refid="where_statistics_upd" /> and status=3) as sumStopCount
	from t_pay_plan group by sumNewCount,sumFailCount,sumFinishCount,sumStopCount
  </select>
  
  <sql id="PayPlayDCStatistics_where">
  	<where>
  		<if test="plan_id !=null and plan_id !=''">
  		 and p.plan_id=#{plan_id}
  		</if>
  		<if test="startTime !=null">
  		 and p.row_crt_ts &gt;=#{startTime}
  		</if>
  		<if test="endTime !=null">
  		 and p.row_crt_ts &lt;=#{endTime}
  		</if>
  		<if test="status !=null">
  		 and p.status =#{status}
  		</if>
  	</where>
  </sql>
  <select id="countPayPlayDCStatistics" parameterType="net.chrone.creditpay.model.PayPlanDCStatisticsDTO" resultType="map">
  select 
  	count(1) as pageCount,
  	sum(plan_amt) as sum_plan_amt,
  	sum(fee) as sum_fee,
  	sum(df_fee) as sum_df_fee,
  	sum(pay_amt) as sum_pay_amt,
  	sum(user_profits) as sum_user_profits,
  	sum(agent_profits) as sum_agent_profits,
  	sum(refund_fee) as sum_refund_fee,
  	sum(refund_dffee) as sum_refund_dffee,
  	sum(xf_chnl_amt) as sum_xf_chnl_amt,
  	sum(df_chnl_amt) as sum_df_chnl_amt
  from (
		select 
			p.plan_id,
			p.status,
			p.row_crt_ts,
			p.plan_amt,
			p.fee,
			p.df_fee,
			p.pay_amt,
			(select case when sum(amount) is null then 0 else  sum(amount) end  from t_pay_profits_detail where plan_id=p.plan_id and profits_user_id !='13888888888' and agent_id='') as user_profits,
			(select case when sum(amount) is null then 0 else  sum(amount) end  from t_pay_profits_detail where plan_id=p.plan_id and agent_id !='' and profits_user_id !='13888888888') as agent_profits,
			 (select case when sum(aval_debit) is null then 0 else  sum(aval_debit) end  from t_account_detail where trans_type=3 and  memo=CONCAT('服务费退款,计划ID:',p.plan_id)) as refund_fee,
			 (select case when sum(aval_debit) is null then 0 else  sum(aval_debit) end  from t_account_detail where trans_type=3 and  memo=CONCAT('代付费退款,计划ID:',p.plan_id)) as refund_dffee,
			b.xf_chnl_amt,
			b.df_chnl_amt
			from t_pay_plan p 
			left join 
			(select 
			plan_id,
			sum(case when order_tp=0 then fee else 0 end) xf_chnl_amt, 
			sum(case when order_tp=1 then fee else 0 end) df_chnl_amt
			from t_order where plan_id !='' and order_tp in(0,1) and pay_st=2 group by plan_id) b on p.plan_id=b.plan_id
			<include refid="PayPlayDCStatistics_where"/>
			) c
  </select>
  
  <select id="pagePayPlayDCStatistics" parameterType="net.chrone.creditpay.model.PayPlanDCStatisticsDTO" resultType="net.chrone.creditpay.model.PayPlanDCStatisticsDTO">
  select * from (
  select 
	p.plan_id,
	p.status,
	p.row_crt_ts,
	p.plan_amt,
	p.fee,
	p.df_fee,
	p.pay_amt,
	(select case when sum(amount) is null then 0 else  sum(amount) end  from t_pay_profits_detail where plan_id=p.plan_id and profits_user_id !='13888888888' and agent_id='') as user_profits,
	(select case when sum(amount) is null then 0 else  sum(amount) end  from t_pay_profits_detail where plan_id=p.plan_id and agent_id !='' and profits_user_id !='13888888888') as agent_profits,
	 (select case when sum(aval_debit) is null then 0 else  sum(aval_debit) end  from t_account_detail where trans_type=3 and  memo=CONCAT('服务费退款,计划ID:',p.plan_id)) as refund_fee,
	 (select case when sum(aval_debit) is null then 0 else  sum(aval_debit) end  from t_account_detail where trans_type=3 and  memo=CONCAT('代付费退款,计划ID:',p.plan_id)) as refund_dffee,
	b.xf_chnl_amt,
	b.df_chnl_amt
	from t_pay_plan p 
	left join 
	(select 
	plan_id,
	sum(case when order_tp=0 then fee else 0 end) xf_chnl_amt, 
	sum(case when order_tp=1 then fee else 0 end) df_chnl_amt
	from t_order where plan_id !='' and order_tp in(0,1) and pay_st=2 group by plan_id) b on p.plan_id=b.plan_id
  <include refid="PayPlayDCStatistics_where"/>
  order by p.row_crt_ts desc
  	) d limit  #{startRow} , #{pageSize} 
  </select>
</mapper>