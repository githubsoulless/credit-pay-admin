<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.chrone.creditpay.mapper.PayPlanTaskMapper">
  <resultMap id="BaseResultMap" type="net.chrone.creditpay.model.PayPlanTask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    <id column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="plan_id" jdbcType="VARCHAR" property="planId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="card_name" jdbcType="VARCHAR" property="cardName" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="bank_no" jdbcType="VARCHAR" property="bankNo" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="df_fee" jdbcType="INTEGER" property="dfFee" />
    <result column="pay_fee" jdbcType="DECIMAL" property="payFee" />
    <result column="hk_fee" jdbcType="INTEGER" property="hkFee" />
    <result column="plan_dt" jdbcType="VARCHAR" property="planDt" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="finsh_time" jdbcType="TIMESTAMP" property="finshTime" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="trans_batch" jdbcType="VARCHAR" property="transBatch" />
    <result column="tarns_group" jdbcType="INTEGER" property="tarnsGroup" />
    <result column="row_crt_usr" jdbcType="VARCHAR" property="rowCrtUsr" />
    <result column="row_crt_ts" jdbcType="TIMESTAMP" property="rowCrtTs" />
    <result column="rec_upd_usr" jdbcType="VARCHAR" property="recUpdUsr" />
    <result column="rec_upd_ts" jdbcType="TIMESTAMP" property="recUpdTs" />
    <result column="pay_count" jdbcType="INTEGER" property="payCount" />
    <result column="industry" jdbcType="VARCHAR" property="industry" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="pay_chnl" jdbcType="VARCHAR" property="payChnl" />
    <result column="plan_type" jdbcType="INTEGER" property="planType" />
    <result column="execute_time" jdbcType="VARCHAR" property="executeTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    task_id, type, plan_id, user_id, card_id, card_name, card_no, bank_no, amount, df_fee, 
    pay_fee, hk_fee, plan_dt, status, finsh_time, order_no, remark, trans_batch, tarns_group, 
    row_crt_usr, row_crt_ts, rec_upd_usr, rec_upd_ts, pay_count, industry, city, pay_chnl, 
    plan_type, execute_time
  </sql>
  <select id="selectByExample" parameterType="net.chrone.creditpay.model.PayPlanTaskExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pay_plan_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_pay_plan_task
    where task_id = #{taskId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    delete from t_pay_plan_task
    where task_id = #{taskId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="net.chrone.creditpay.model.PayPlanTaskExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    delete from t_pay_plan_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.chrone.creditpay.model.PayPlanTask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    insert into t_pay_plan_task (task_id, type, plan_id, 
      user_id, card_id, card_name, 
      card_no, bank_no, amount, 
      df_fee, pay_fee, hk_fee, 
      plan_dt, status, finsh_time, 
      order_no, remark, trans_batch, 
      tarns_group, row_crt_usr, row_crt_ts, 
      rec_upd_usr, rec_upd_ts, pay_count, 
      industry, city, pay_chnl, 
      plan_type, execute_time)
    values (#{taskId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{planId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, #{cardName,jdbcType=VARCHAR}, 
      #{cardNo,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{dfFee,jdbcType=INTEGER}, #{payFee,jdbcType=DECIMAL}, #{hkFee,jdbcType=INTEGER}, 
      #{planDt,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{finshTime,jdbcType=TIMESTAMP}, 
      #{orderNo,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{transBatch,jdbcType=VARCHAR}, 
      #{tarnsGroup,jdbcType=INTEGER}, #{rowCrtUsr,jdbcType=VARCHAR}, #{rowCrtTs,jdbcType=TIMESTAMP}, 
      #{recUpdUsr,jdbcType=VARCHAR}, #{recUpdTs,jdbcType=TIMESTAMP}, #{payCount,jdbcType=INTEGER}, 
      #{industry,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{payChnl,jdbcType=VARCHAR}, 
      #{planType,jdbcType=INTEGER}, #{executeTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.chrone.creditpay.model.PayPlanTask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    insert into t_pay_plan_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="cardName != null">
        card_name,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="bankNo != null">
        bank_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="dfFee != null">
        df_fee,
      </if>
      <if test="payFee != null">
        pay_fee,
      </if>
      <if test="hkFee != null">
        hk_fee,
      </if>
      <if test="planDt != null">
        plan_dt,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="finshTime != null">
        finsh_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="transBatch != null">
        trans_batch,
      </if>
      <if test="tarnsGroup != null">
        tarns_group,
      </if>
      <if test="rowCrtUsr != null">
        row_crt_usr,
      </if>
      <if test="rowCrtTs != null">
        row_crt_ts,
      </if>
      <if test="recUpdUsr != null">
        rec_upd_usr,
      </if>
      <if test="recUpdTs != null">
        rec_upd_ts,
      </if>
      <if test="payCount != null">
        pay_count,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="payChnl != null">
        pay_chnl,
      </if>
      <if test="planType != null">
        plan_type,
      </if>
      <if test="executeTime != null">
        execute_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null">
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="dfFee != null">
        #{dfFee,jdbcType=INTEGER},
      </if>
      <if test="payFee != null">
        #{payFee,jdbcType=DECIMAL},
      </if>
      <if test="hkFee != null">
        #{hkFee,jdbcType=INTEGER},
      </if>
      <if test="planDt != null">
        #{planDt,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="finshTime != null">
        #{finshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="transBatch != null">
        #{transBatch,jdbcType=VARCHAR},
      </if>
      <if test="tarnsGroup != null">
        #{tarnsGroup,jdbcType=INTEGER},
      </if>
      <if test="rowCrtUsr != null">
        #{rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtTs != null">
        #{rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdUsr != null">
        #{recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="recUpdTs != null">
        #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
      <if test="payCount != null">
        #{payCount,jdbcType=INTEGER},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="payChnl != null">
        #{payChnl,jdbcType=VARCHAR},
      </if>
      <if test="planType != null">
        #{planType,jdbcType=INTEGER},
      </if>
      <if test="executeTime != null">
        #{executeTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.chrone.creditpay.model.PayPlanTaskExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    select count(*) from t_pay_plan_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    update t_pay_plan_task
    <set>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.planId != null">
        plan_id = #{record.planId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardName != null">
        card_name = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNo != null">
        bank_no = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.dfFee != null">
        df_fee = #{record.dfFee,jdbcType=INTEGER},
      </if>
      <if test="record.payFee != null">
        pay_fee = #{record.payFee,jdbcType=DECIMAL},
      </if>
      <if test="record.hkFee != null">
        hk_fee = #{record.hkFee,jdbcType=INTEGER},
      </if>
      <if test="record.planDt != null">
        plan_dt = #{record.planDt,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.finshTime != null">
        finsh_time = #{record.finshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.transBatch != null">
        trans_batch = #{record.transBatch,jdbcType=VARCHAR},
      </if>
      <if test="record.tarnsGroup != null">
        tarns_group = #{record.tarnsGroup,jdbcType=INTEGER},
      </if>
      <if test="record.rowCrtUsr != null">
        row_crt_usr = #{record.rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="record.rowCrtTs != null">
        row_crt_ts = #{record.rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recUpdUsr != null">
        rec_upd_usr = #{record.recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="record.recUpdTs != null">
        rec_upd_ts = #{record.recUpdTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payCount != null">
        pay_count = #{record.payCount,jdbcType=INTEGER},
      </if>
      <if test="record.industry != null">
        industry = #{record.industry,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.payChnl != null">
        pay_chnl = #{record.payChnl,jdbcType=VARCHAR},
      </if>
      <if test="record.planType != null">
        plan_type = #{record.planType,jdbcType=INTEGER},
      </if>
      <if test="record.executeTime != null">
        execute_time = #{record.executeTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    update t_pay_plan_task
    set task_id = #{record.taskId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      plan_id = #{record.planId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      card_name = #{record.cardName,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      df_fee = #{record.dfFee,jdbcType=INTEGER},
      pay_fee = #{record.payFee,jdbcType=DECIMAL},
      hk_fee = #{record.hkFee,jdbcType=INTEGER},
      plan_dt = #{record.planDt,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      finsh_time = #{record.finshTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      trans_batch = #{record.transBatch,jdbcType=VARCHAR},
      tarns_group = #{record.tarnsGroup,jdbcType=INTEGER},
      row_crt_usr = #{record.rowCrtUsr,jdbcType=VARCHAR},
      row_crt_ts = #{record.rowCrtTs,jdbcType=TIMESTAMP},
      rec_upd_usr = #{record.recUpdUsr,jdbcType=VARCHAR},
      rec_upd_ts = #{record.recUpdTs,jdbcType=TIMESTAMP},
      pay_count = #{record.payCount,jdbcType=INTEGER},
      industry = #{record.industry,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      pay_chnl = #{record.payChnl,jdbcType=VARCHAR},
      plan_type = #{record.planType,jdbcType=INTEGER},
      execute_time = #{record.executeTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.chrone.creditpay.model.PayPlanTask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    update t_pay_plan_task
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null">
        card_name = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="dfFee != null">
        df_fee = #{dfFee,jdbcType=INTEGER},
      </if>
      <if test="payFee != null">
        pay_fee = #{payFee,jdbcType=DECIMAL},
      </if>
      <if test="hkFee != null">
        hk_fee = #{hkFee,jdbcType=INTEGER},
      </if>
      <if test="planDt != null">
        plan_dt = #{planDt,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="finshTime != null">
        finsh_time = #{finshTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="transBatch != null">
        trans_batch = #{transBatch,jdbcType=VARCHAR},
      </if>
      <if test="tarnsGroup != null">
        tarns_group = #{tarnsGroup,jdbcType=INTEGER},
      </if>
      <if test="rowCrtUsr != null">
        row_crt_usr = #{rowCrtUsr,jdbcType=VARCHAR},
      </if>
      <if test="rowCrtTs != null">
        row_crt_ts = #{rowCrtTs,jdbcType=TIMESTAMP},
      </if>
      <if test="recUpdUsr != null">
        rec_upd_usr = #{recUpdUsr,jdbcType=VARCHAR},
      </if>
      <if test="recUpdTs != null">
        rec_upd_ts = #{recUpdTs,jdbcType=TIMESTAMP},
      </if>
      <if test="payCount != null">
        pay_count = #{payCount,jdbcType=INTEGER},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="payChnl != null">
        pay_chnl = #{payChnl,jdbcType=VARCHAR},
      </if>
      <if test="planType != null">
        plan_type = #{planType,jdbcType=INTEGER},
      </if>
      <if test="executeTime != null">
        execute_time = #{executeTime,jdbcType=VARCHAR},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.chrone.creditpay.model.PayPlanTask">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 25 11:14:08 CST 2019.
    -->
    update t_pay_plan_task
    set type = #{type,jdbcType=INTEGER},
      plan_id = #{planId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      card_name = #{cardName,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      df_fee = #{dfFee,jdbcType=INTEGER},
      pay_fee = #{payFee,jdbcType=DECIMAL},
      hk_fee = #{hkFee,jdbcType=INTEGER},
      plan_dt = #{planDt,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      finsh_time = #{finshTime,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      trans_batch = #{transBatch,jdbcType=VARCHAR},
      tarns_group = #{tarnsGroup,jdbcType=INTEGER},
      row_crt_usr = #{rowCrtUsr,jdbcType=VARCHAR},
      row_crt_ts = #{rowCrtTs,jdbcType=TIMESTAMP},
      rec_upd_usr = #{recUpdUsr,jdbcType=VARCHAR},
      rec_upd_ts = #{recUpdTs,jdbcType=TIMESTAMP},
      pay_count = #{payCount,jdbcType=INTEGER},
      industry = #{industry,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      pay_chnl = #{payChnl,jdbcType=VARCHAR},
      plan_type = #{planType,jdbcType=INTEGER},
      execute_time = #{executeTime,jdbcType=VARCHAR}
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>
    <sql id="where_page">
  	<where>
  		<if test="taskId !=null and taskId !=''">
  			and t.task_id=#{taskId}
	  	</if>
  		<if test="planId !=null and planId !=''">
  			and t.plan_id=#{planId}
	  	</if>
  		<if test="type !=null">
  			and t.type=#{type}
	  	</if>
  		<if test="status !=null">
  			and t.status=#{status}
	  	</if>
  		<if test="startDate !=null and startDate !=''">
  			and t.plan_dt &gt;= #{startDate}
	  	</if>
  		<if test="endDate !=null and endDate !=''">
  			and t.plan_dt &lt;= #{endDate}
	  	</if>
  		<if test="cardId !=null and cardId !=''">
  			and t.card_id=#{cardId}
	  	</if>
  		<if test="cardNo !=null and cardNo !=''">
  			and t.card_no=#{cardNo}
	  	</if>
  		<if test="cardName !=null and cardName !=''">
  			and t.card_name=#{cardName}
	  	</if>
  		<if test="userId !=null and userId !=''">
  			and t.user_id=#{userId}
	  	</if>
  	</where>
  </sql>
   <select id="getPayPlanTaskByPageCount" parameterType="net.chrone.creditpay.model.PayPlanTask" resultType="map">
  	select count(1) as count,sum(amount) as sumPlanAmt from t_pay_plan_task t 
  	<include refid="where_page" />
  </select>
  <select id="getPayPlanTaskByPage" parameterType="net.chrone.creditpay.model.PayPlanTask" resultMap="BaseResultMap">
 	 select a.* from (
  	select t.*
  	from t_pay_plan_task t 
  	<include refid="where_page" />
  	order by t.plan_id desc,t.plan_dt asc,t.tarns_group asc
  	)a limit  #{startRow} , #{pageSize}
  </select>
  
  <select id="yesterdayTask" resultType="map">
  	select
		(select count(1) from t_pay_plan_task where type=0 and status=2 and plan_dt=#{dateTime}) as countPaySuccess,
		(select sum(amount) from t_pay_plan_task where type=0 and status=2 and plan_dt=#{dateTime}) as sumPaySuccessAmt,
		(select count(1) from t_pay_plan_task where type=0 and status=1 and plan_dt=#{dateTime}) as countPayFaild,
		(select sum(amount) from t_pay_plan_task where type=0 and status=1 and plan_dt=#{dateTime}) as sumPayFaildAmt,
		(select count(1) from t_pay_plan_task where type=0 and status=3 and plan_dt=#{dateTime}) as countPayStop,
		(select sum(amount) from t_pay_plan_task where type=0 and status=3 and plan_dt=#{dateTime}) as sumPayStopAmt,
		(select count(1) from t_pay_plan_task where type=1 and status=2 and plan_dt=#{dateTime}) as countRePaySuccess,
		(select sum(amount) from t_pay_plan_task where type=1 and status=2 and plan_dt=#{dateTime}) as sumRePaySuccessAmt,
		(select count(1) from t_pay_plan_task where type=1 and status=1 and plan_dt=#{dateTime}) as countRePayFaild,
		(select sum(amount) from t_pay_plan_task where type=1 and status=1 and plan_dt=#{dateTime}) as sumRePayFaildAmt,
		(select count(1) from t_pay_plan_task where type=1 and status=3 and plan_dt=#{dateTime}) as countRePayStop,
		(select sum(amount) from t_pay_plan_task where type=1 and status=3 and plan_dt=#{dateTime}) as sumRePayStopAmt
	from dual
  </select>
  
  <select id="taskRealTimeStatistics" parameterType="string" resultType="map">
  	select
  		(
  			select count(1) from t_pay_plan_task where type=0 and status=0
  			<if test="dateTime !=null and dateTime!=''">
  			and  plan_dt=#{dateTime}
  			</if>
  			) as countPayTask,
		(
		select sum(amount) from t_pay_plan_task where type=0 and status=0
		<if test="dateTime !=null and dateTime!=''">
  			and  plan_dt=#{dateTime}
  			</if>
		) as sumPayTaskAmt,
		(
		select count(1) from t_pay_plan_task where type=1 and status=0
		<if test="dateTime !=null and dateTime!=''">
  			and  plan_dt=#{dateTime}
  			</if>
		) as countRePayTask,
		(
		select sum(amount) from t_pay_plan_task where type=1 and status=0
		<if test="dateTime !=null and dateTime!=''">
  			and  plan_dt=#{dateTime}
  			</if>
		) as sumRePayTaskAmt		
	from dual
  </select>
  
  <select id="countTaskStatistics" parameterType="net.chrone.creditpay.model.PayPlanTask" resultType="map">
  select
		(select count(1) from t_pay_plan_task where type=0 and status=2) as countPaySuccess,
		(select sum(amount) from t_pay_plan_task where type=0 and status=2) as sumPaySuccessAmt,
		(select count(1) from t_pay_plan_task where type=0 and status=1) as countPayFaild,
		(select sum(amount) from t_pay_plan_task where type=0 and status=1) as sumPayFaildAmt,
		(select count(1) from t_pay_plan_task where type=0 and status=3) as countPayStop,
		(select sum(amount) from t_pay_plan_task where type=0 and status=3) as sumPayStopAmt,
		(select count(1) from t_pay_plan_task where type=1 and status=2) as countRePaySuccess,
		(select sum(amount) from t_pay_plan_task where type=1 and status=2) as sumRePaySuccessAmt,
		(select count(1) from t_pay_plan_task where type=1 and status=1) as countRePayFaild,
		(select sum(amount) from t_pay_plan_task where type=1 and status=1) as sumRePayFaildAmt,
		(select count(1) from t_pay_plan_task where type=1 and status=3) as countRePayStop,
		(select sum(amount) from t_pay_plan_task where type=1 and status=3) as sumRePayStopAmt
	from t_pay_plan_task a
	where a.plan_dt &gt;= #{startDate} and a.plan_dt &lt;= #{endDate} group by countPaySuccess
  </select>
  
  <select id="listTaskStatistics" parameterType="net.chrone.creditpay.model.PayPlanTask" resultType="map">
  	select a.plan_dt,
		(select count(1) from t_pay_plan_task b where type=0 and status=2 and b.plan_dt=a.plan_dt) as countPaySuccess,
		(select sum(amount) from t_pay_plan_task b where type=0 and status=2 and b.plan_dt=a.plan_dt) as sumPaySuccessAmt,
		(select count(1) from t_pay_plan_task b where type=0 and status=1 and b.plan_dt=a.plan_dt) as countPayFaild,
		(select sum(amount) from t_pay_plan_task b where type=0 and status=1 and b.plan_dt=a.plan_dt) as sumPayFaildAmt,
		(select count(1) from t_pay_plan_task b where type=0 and status=3 and b.plan_dt=a.plan_dt) as countPayStop,
		(select sum(amount) from t_pay_plan_task b where type=0 and status=3 and b.plan_dt=a.plan_dt) as sumPayStopAmt,
		(select count(1) from t_pay_plan_task b where type=1 and status=2 and b.plan_dt=a.plan_dt) as countRePaySuccess,
		(select sum(amount) from t_pay_plan_task b where type=1 and status=2 and b.plan_dt=a.plan_dt) as sumRePaySuccessAmt,
		(select count(1) from t_pay_plan_task b where type=1 and status=1 and b.plan_dt=a.plan_dt) as countRePayFaild,
		(select sum(amount) from t_pay_plan_task b where type=1 and status=1 and b.plan_dt=a.plan_dt) as sumRePayFaildAmt,
		(select count(1) from t_pay_plan_task b where type=1 and status=3 and b.plan_dt=a.plan_dt) as countRePayStop,
		(select sum(amount) from t_pay_plan_task b where type=1 and status=3 and b.plan_dt=a.plan_dt) as sumRePayStopAmt
	from t_pay_plan_task a 
	where a.plan_dt &gt;= #{startDate} and a.plan_dt &lt;= #{endDate}
	group by a.plan_dt order by a.plan_dt desc
  </select>
  
</mapper>